--------------------------------DDL
--删除table
DROP TABLE IF EXISTS login CASCADE;
DROP TABLE IF EXISTS employee;
DROP TABLE IF EXISTS customer CASCADE;
DROP TABLE IF EXISTS account CASCADE;
DROP TABLE IF EXISTS transaction;
--------------------------------CRUD
--创建
CREATE TABLE login(
	login_id serial PRIMARY KEY,
	username varchar(20) UNIQUE NOT NULL,
	password varchar(20) NOT NULL
);

CREATE TABLE account(
	account_id serial PRIMARY KEY,
	account_number INTEGER NOT NULL,
	account_type varchar(20) NOT NULL,
	balance INTEGER NOT NULL,
	account_created_date TIMESTAMP DEFAULT current_timestamp
);

CREATE TABLE employee(
	employee_id serial PRIMARY KEY,
	first_name varchar(20) NOT NULL,
	last_name varchar(20) NOT NULL,
	login_id INTEGER,
	CONSTRAINT fk_login FOREIGN KEY(login_id) REFERENCES login(login_id)
);

CREATE TABLE customer(
	customer_id serial PRIMARY KEY,
	first_name varchar(20) NOT NULL,
	last_name varchar(20) NOT NULL,
	account_id_checking INTEGER,--bank account
	account_id_saving INTEGER,
	dob varchar(20),
	login_id INTEGER,--login account
	CONSTRAINT fk_login FOREIGN KEY(login_id) REFERENCES login(login_id),
	CONSTRAINT fk_account_id_checking FOREIGN KEY(account_id_checking) REFERENCES account(account_id),
	CONSTRAINT fk_account_id_saving FOREIGN KEY(account_id_saving) REFERENCES account(account_id)
);--创建用户的逻辑 1. 用户输入姓名，账号，密码  2. 插入用户账号密码，成功创建登陆账户  3. 查找当前账号并返回当前账号的login_id 4. 插入用户姓名，login_id到数据库 

CREATE TABLE transaction(
	trans_id serial PRIMARY KEY,
	trans_type varchar(20),
	trans_account_type varchar(20),
	trans_amount INTEGER,
	trans_Date TIMESTAMP DEFAULT current_timestamp,
	customer_id INTEGER NOT NULL,
	CONSTRAINT fk_customer_id FOREIGN KEY(customer_id) REFERENCES customer(customer_id)
);

--查找
SELECT * FROM login;
--
SELECT * FROM transaction;
--
SELECT * FROM employee;
--
SELECT * FROM customer;
--
SELECT * FROM employee INNER JOIN login ON employee.employee_id = login.login_id;
--
SELECT * FROM account INNER JOIN customer ON customer.account_id_checking = account.account_id WHERE customer.login_id = 3;
--
SELECT * FROM account;
--
SELECT * FROM  customer
LEFT JOIN account 
ON customer.account_id_checking = account.account_id 
OR customer.account_id_saving = account.account_id;
--
SELECT * FROM  customer
FULL OUTER JOIN account 
ON customer.account_id_checking = account.account_id 
OR customer.account_id_saving = account.account_id
WHERE login_id = 1;
--

--更新

UPDATE customer SET account_id_checking = NULL WHERE account_id_checking = 3;
UPDATE customer SET account_id_saving = NULL WHERE customer_id_saving = 2;
--删除
DELETE FROM account 
WHERE account_id = 2;
--插入
INSERT INTO login(username, password)
VALUES('admin', 'root');

INSERT INTO employee(first_name, last_name, login_id)
VALUES('xing', 'liu', 1);

INSERT INTO transaction(customer_id, trans_type, trans_account_type, trans_amount)
VALUES(1, 'deposit', 'checking', 500);